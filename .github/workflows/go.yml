name: Go
on: [push]
env:
  BRANCH: `echo $GITHUB_REF|cut -d/ -f 3`
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        env

    - name: Go Build
      run: go build -v .
    - name: Docker Build & Push
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: mgudmund/go-docker/go-docker:latest
        username: mgudmund
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
    - name: env
      run: env      
  scan:
    name: scan
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/gitlab-org/security-products/analyzers/klar:1
      options: --link clair-vulnerabilities-db
    services:
      clair-vulnerabilities-db:
        image: arminc/clair-db:latest
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --name clair-vulnerabilities-db --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:     
    - run: /container-scanner/start.sh
      env:
        # use postgres for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be localhost
        POSTGRES_HOST: clair-vulnerabilities-db
        POSTGRES_PORT: ${{ job.services.clair-vulnerabilities-db.ports[5432] }}
        CI_APPLICATION_REPOSITORY: mgudmund:${{ secrets.GITHUB_TOKEN }}@docker.pkg.github.com/mgudmund/go-docker/go-docker
        CI_APPLICATION_TAG: latest
        #DOCKER_USERNAME: mgudmund
        #DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    - run: cat /gl-container-scanning-report.json
 
